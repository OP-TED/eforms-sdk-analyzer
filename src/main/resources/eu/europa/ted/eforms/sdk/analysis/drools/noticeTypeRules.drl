package eu.europa.ted.eforms.sdk.analysis.drools;

unit SdkUnit;

import eu.europa.ted.eforms.sdk.analysis.vo.ValidationResult;
import eu.europa.ted.eforms.sdk.analysis.enums.ValidationStatusEnum;

// TEDEFO-1813: Check the sdkVersion in the header of every file in the folder.
rule "Every notice type has SDK version"
when
  /noticeTypes[ $nt: this, sdkVersion == null || sdkVersion.trim.empty ]
then
  results.add(new ValidationResult($nt, "Undefined SDK version", ValidationStatusEnum.ERROR));
end

// TEDEFO-1813: Check the sdkVersion in the header of every file in the folder.
rule "Notice types index has SDK version"
when
  /noticeTypesIndex[ $nti: this, sdkVersion == null || sdkVersion.trim.empty ]
then
  results.add(new ValidationResult($nti, "Undefined SDK version", ValidationStatusEnum.ERROR));
end

// TEDEFO-1815: Check that the labels referenced in the notice-types.json file actually exist.
rule "Notice types index references existing labels"
when
  /noticeTypesIndex[ $nti: this ]
  $labelId: String() from $nti.labelIds
  not (exists /labels[ id == $labelId ])
then
  results.add(new ValidationResult($nti, "Referenced label " + $labelId + " does not exist", ValidationStatusEnum.ERROR));
end
