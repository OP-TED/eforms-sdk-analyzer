package eu.europa.ted.eforms.sdk.analysis.drools;

unit SdkUnit;

import eu.europa.ted.eforms.sdk.domain.codelist.Codelist;

rule "Codes in tailored codelists are present in parent codelist"
when
  $tailoredcode : /codelists[ $tailored: this, $parentId: parentId, isTailored == true ]/codes
  not (exists /codelists[ id == $parentId, codes contains $tailoredcode ])
then
  results.add(new ValidationResult($tailored, "Code " + $tailoredcode + " is not present in parent codelist " + $parentId, ValidationStatusEnum.ERROR));
end

rule "Codelist indicated in codelists index exists"
when
  /codelistsIndex[ $cli: this ]/indexItems[ $codelistId: id, $filename: filename ]
  not (exists /codelists[ id == $codelistId, filename == $filename ])
then
  results.add(new ValidationResult($cli, "Codelist with id " + $codelistId + " is not present the codelists folder with filename " + $filename, ValidationStatusEnum.ERROR));
end

rule "Codelist files are indicated in codelists index"
when
  /codelists[ $cl: this, $codelistId: id, $filename: filename ]
  not (exists /codelistsIndex/indexItems[ id == $codelistId, filename == $filename ])
then
  results.add(new ValidationResult($cl, "Codelist file " + $filename + " with id " + $codelistId + " is not listed in codelists.json", ValidationStatusEnum.ERROR));
end

rule "Codelist filenames are as expected"
when
  /codelists[ $cl: this, $filename: filename, filename != expectedFilename ]
then
  results.add(new ValidationResult($cl, "Codelist file " + $filename + " does not have the expected filename", ValidationStatusEnum.ERROR));
end
