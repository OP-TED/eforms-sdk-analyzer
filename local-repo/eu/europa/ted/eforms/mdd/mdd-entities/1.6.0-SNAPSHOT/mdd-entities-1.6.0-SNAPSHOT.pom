<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>eu.europa.ted.eforms.mdd</groupId>
  <artifactId>mdd-entities</artifactId>
  <version>1.6.0-SNAPSHOT</version>

  <!-- A jar that will be used as library by core module -->
  <packaging>jar</packaging>
  <name>mdd-entities</name>
  <description>eForms Metadata Entities</description>

  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub Packages</name>
      <url>https://maven.pkg.github.com/OP-TED/eforms-metadata-entities</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <package.name>eu.europa.ec.mdd.generated</package.name>

    <!-- Java -->
    <java.version>11</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <!-- Database -->
    <datasource.url>jdbc:mysql://${datasource.host}:${datasource.port}/${datasource.catalog}?serverTimezone=CET&amp;allowMultiQueries=true
    </datasource.url>
    <datasource.inventory.dir>${basedir}/inventory/database</datasource.inventory.dir>

    <!-- Dependencies versions -->
    <version.jooq>3.14.15</version.jooq>
    <version.spring-boot>2.6.6</version.spring-boot>

    <!-- Plugins versions -->
    <version.build-helper.plugin>3.3.0</version.build-helper.plugin>
    <version.properties.plugin>1.1.0</version.properties.plugin>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${version.spring-boot}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <optional>true</optional>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.jooq</groupId>
          <artifactId>jooq-codegen-maven</artifactId>
          <version>${version.jooq}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>${version.properties.plugin}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>generate-sources</id>
      <dependencies>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen-maven</artifactId>
            <executions>
              <execution>
                <id>jooq-codegen</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
                <configuration>
                  <jdbc>
                    <url>${datasource.url}</url>
                    <user>${datasource.username}</user>
                    <password>${datasource.password}</password>
                    <properties>
                      <property>
                        <key>serverTimezone</key>
                        <value>CET</value>
                      </property>
                    </properties>
                  </jdbc>
                  <generator>
                    <name>org.jooq.codegen.JavaGenerator</name>
                    <database>
                      <inputCatalog></inputCatalog>
                      <inputSchema>${datasource.catalog}</inputSchema>
                      <includes>${datasource.catalog}.*</includes>
                      <excludes>pma__.*</excludes>
                      <outputSchemaToDefault>true</outputSchemaToDefault>
                      <forcedTypes>
                        <forcedType>
                          <name>BOOLEAN</name>
                          <includeTypes>(?i:TINYINT\(1\))</includeTypes>
                        </forcedType>
                      </forcedTypes>
                    </database>
                    <generate>
                      <!-- Avoids CRLF line ending issues in JOOQ generated files, we want LF in the Java repo. -->
                      <!-- https://www.jooq.org/doc/3.0/manual/code-generation/codegen-advanced/codegen-config-generate/codegen-whitespace/ -->
                      <indentation>\s\s</indentation>
                      <newline>\n</newline>
                      <daos>true</daos>
                      <pojos>true</pojos>
                      <javaTimeTypes>true</javaTimeTypes>
                      <interfaces>true</interfaces>
                      <springAnnotations>true</springAnnotations>
                    </generate>
                    <target>
                      <directory>${project.basedir}/src/main/java</directory>
                      <packageName>${package.name}</packageName>
                    </target>
                  </generator>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- OP and profiles used inside OP network -->
    <profile>
      <id>op</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>

      <properties>
        <datasource.host>dramempe.cc.cec.eu.int</datasource.host>
        <datasource.port>3306</datasource.port>
        <datasource.catalog>TEDEFO_ACC_MDD</datasource.catalog>
      </properties>
    </profile>

    <!-- When an environment is set, this profile configures a target database using an environment-specific file (defined as ${properties.file}. -->
    <profile>
      <id>env-based</id>
      <activation>
        <property>
          <name>environment</name>
        </property>
      </activation>

      <properties>
        <properties.file>${datasource.inventory.dir}/db_${environment}.properties</properties.file>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>load-db-properties</id>
                <phase>initialize</phase>
                <goals>
                  <goal>read-project-properties</goal>
                </goals>
                <configuration>
                  <files>
                    <file>${properties.file}</file>
                  </files>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>db-docker</id>

      <properties>
        <!-- Directory with SQL scripts to populate a local database -->
        <sql.dir>${basedir}/scripts/provisioning/mysql/sql</sql.dir>
        <mysql.conf.dir>${basedir}/scripts/provisioning/mysql/conf</mysql.conf.dir>

        <datasource.host>localhost</datasource.host>
        <datasource.port>33306</datasource.port>
        <datasource.catalog>TEDEFO_ACC_MDD</datasource.catalog>
        <datasource.url>jdbc:mysql://${datasource.host}:${datasource.port}/${datasource.catalog}?serverTimezone=CET</datasource.url>
        <datasource.username>builder</datasource.username>
        <datasource.password>builder</datasource.password>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.26.0</version>
            <executions>
              <execution>
                <id>start</id>
                <phase>initialize</phase>
                <goals>
                  <goal>build</goal>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>

            <configuration>
              <showLogs>true</showLogs>
              <images>
                <image>
                  <alias>database</alias>
                  <name>mysql</name>
                  <run>
                    <ports>
                      <port>33306:3306</port>
                    </ports>
                    <volumes>
                      <bind>
                        <volume>${mysql.conf.dir}:/etc/mysql/conf.d</volume>
                        <volume>${sql.dir}:/docker-entrypoint-initdb.d</volume>
                      </bind>
                    </volumes>
                    <wait>
                      <tcp>
                        <ports>
                          <port>3306</port>
                        </ports>
                      </tcp>
                      <time>120000</time>
                    </wait>
                    <env>
                      <MYSQL_DATABASE>${datasource.catalog}</MYSQL_DATABASE>
                      <MYSQL_ROOT_PASSWORD>${datasource.password}</MYSQL_ROOT_PASSWORD>
                      <MYSQL_USER>${datasource.username}</MYSQL_USER>
                      <MYSQL_PASSWORD>${datasource.password}</MYSQL_PASSWORD>
                    </env>
                  </run>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
